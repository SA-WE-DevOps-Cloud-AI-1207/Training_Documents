
#########################
Day 18 : 14th Sep. 2025
#########################	
	
	
	- Kubernetes :::::
	
		- It is a Open-Source Container Orchestration Tool 
		- Kubernetes is used to Deploy any type of Containers.
		- It is used to ensure high availability of the Applications/services running thru Containers.
		- Used to Ensure High Availability of Containers by creating Replicas of Containers.
		- It supports Auto-Scaling & Load Balancing.

		- Self-healing Capability!
	
	
	- Environments: 
	
		DEV --
		
		Build -- 		*.war -- appimg									--> 1000's of Services 
		
		Target ---
		
			QA 	--> run appimg
			
			UAT --> run appimg
			
			PROD --> run appimg --> create multiple Replicas(10) of Containers 
			
			
			

	- Managed Kubernetes Services :
	
		- AWS 	: EKS/ECR  
		- Azure : AKS/ACR 
		- GCP 	: GKE/GCR
	

	- Kubernetes Architecture ::::
	
	- Kubernetes Architecture Components ::::
	
	- Kubernetes Terminologies ::::
	
	Kubernetes :::
	
		- Kubernetes Architecture :::
		
		- Kubernetes Architecture components :::
		
			API_Server 				--> # Acts as an interface to the kubernetes 
			
			ETCD 					--> # Single point of Source for Kubernetes Components 
			
			Scheduler				--> # To identify the Healthy Node for Deployments
			
			Controller Manager 		--> # To run the pods in its desired state 
			
			
			Kubelet 				--> # Is a Kubernetes Agent used to Create & Deploy the Pods
			
			KubeProxy				--> # Is used to enable pod networking by create Pod IP Address			
			
			CRI - Container RunTime Interface (Container-D)
									--> # It is used identify the Image from Container Registry for deployment				
		
		- Terminologies :::
		
			- Container Images :
				- It is a static file used to define the properties and dependencies of application
				- These are non-executable 
				- It is composed of various layers of instruction created using Dockerfile.
						
			- Container :
			
				- Container is an executable entity of Container Image
			
			- Container Registry :
				- Container Registry is used to Store/Manage the Container Images.
				- DockerHub is a default Container Registry for Docker Container Engine.
				https://hub.docker.com/
				
				
			- Container Repository :				Public/Private 
				- Sub-set of Container Registry 

			- Kubectl 						# It is Command Line Utility to interact with Kubernetes Master 
			
			- Kubernetes Cluster 
											# Is a collection of Worker Nodes. 
							
			- Pod 							# Atomic Unit of Scheduling 			
			
			- Kubernetes_Master				# Used to Create and Schedule the Deployments to Kubernetes_WorkNodes
			
			- Kubernetes_WorkNodes			# Target Servers 
			
		Kubernetes_Master :::
		
			Kubernetes_Cluster1 :
				Kubernetes_WorkerNode1
				Kubernetes_WorkerNode2
				Kubernetes_WorkerNode3
			
			
		Kubernetes_Master :::										AWS cloud 
		
			Kubernetes_Cluster1 :									Region1
				Kubernetes_WorkerNode1
				Kubernetes_WorkerNode2
				Kubernetes_WorkerNode3		
		
			Kubernetes_Cluster2 :									Region2 
				Kubernetes_WorkerNode1
				Kubernetes_WorkerNode2
				Kubernetes_WorkerNode3			

			Kubernetes_Cluster3 :									Region2 
				Kubernetes_WorkerNode1
				Kubernetes_WorkerNode2
				Kubernetes_WorkerNode3		

		Kubernetes_Master :::									On-Prem 
		
			Kubernetes_Master1 :::								AWS cloud 
			
				Kubernetes_Cluster1 :							Region1
					Kubernetes_WorkerNode1
					Kubernetes_WorkerNode2
					Kubernetes_WorkerNode3		
			
				Kubernetes_Cluster2 :							Region2 
					Kubernetes_WorkerNode1
					Kubernetes_WorkerNode2
					Kubernetes_WorkerNode3			

				Kubernetes_Cluster3 :							Region2 
					Kubernetes_WorkerNode1
					Kubernetes_WorkerNode2
					Kubernetes_WorkerNode3					

			Kubernetes_Master2 :::								On-Prem
			
				Kubernetes_Cluster1 :							Region1
					Kubernetes_WorkerNode1
					Kubernetes_WorkerNode2
					Kubernetes_WorkerNode3		
			
				Kubernetes_Cluster2 :							Region2 
					Kubernetes_WorkerNode1
					Kubernetes_WorkerNode2
					Kubernetes_WorkerNode3			

				Kubernetes_Cluster3 :							Region2 
					Kubernetes_WorkerNode1
					Kubernetes_WorkerNode2
					Kubernetes_WorkerNode3	



Next :::

	- Create and Configure Kubernetes Master and WorkNodes

	- Pods & Networking
	
	- Deployment Objects 
	
		- Replicasets
		
	- Namespace
	
	- Kubernetes Services 
	
		- NodePort 
		
		- ClusterIP 
		
		- Load Balancer 
	
	- Kubernetes Volumes 
	
		- HostPath Volume 
	
